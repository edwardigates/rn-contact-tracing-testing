{"version":3,"sources":["Hooks.ts"],"names":["useMemoOne","Animated","horizontalPanGestureHandler","onGestureEvent","panGestureHandler","verticalPanGestureHandler","vec","Clock","Value","diff","set","useCode","useGestureHandler","nativeEvent","deps","usePanGestureHandler","useVerticalPanGestureHandler","useHorizontalPanGestureHandler","useVector","x","y","createValue","useClock","useValue","value","useValues","values","map","v","useNamedValues","result","Object","keys","forEach","key","useClocks","numberOfClocks","Array","fill","useDiff","node","dDiff"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useMemoOne } from \"use-memo-one\";\nimport Animated from \"react-native-reanimated\";\nimport {\n  horizontalPanGestureHandler,\n  onGestureEvent,\n  panGestureHandler,\n  verticalPanGestureHandler,\n} from \"./Gesture\";\nimport { vec } from \"./Vectors\";\n\ntype Dependencies = readonly unknown[];\n\nconst { Clock, Value, diff, set, useCode } = Animated;\n\nexport const useGestureHandler = (\n  nativeEvent: Parameters<typeof onGestureEvent>[0],\n  deps: Dependencies\n) => useMemoOne(() => onGestureEvent(nativeEvent), deps);\n\nexport const usePanGestureHandler = (deps: Dependencies) =>\n  useMemoOne(() => panGestureHandler(), deps);\n\nexport const useVerticalPanGestureHandler = (deps: Dependencies) =>\n  useMemoOne(() => verticalPanGestureHandler(), deps);\n\nexport const useHorizontalPanGestureHandler = (deps: Dependencies) =>\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemoOne(() => horizontalPanGestureHandler(), deps);\n\ntype Atomic = string | number | boolean;\n\nexport const useVector = (x: number, y: number, deps: Dependencies) =>\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemoOne(() => vec.createValue(x, y), deps);\n\nexport const useClock = (deps: Dependencies) =>\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemoOne(() => new Clock(), deps);\n\nexport const useValue = <V extends Atomic>(value: V, deps: Dependencies) =>\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemoOne(() => new Value(value), deps);\n\nexport const useValues = <V extends Atomic>(\n  values: V[],\n  deps: Dependencies\n): Animated.Value<V>[] =>\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useMemoOne(() => values.map((v) => new Value(v)), deps);\n\nexport const useNamedValues = <V extends Atomic, K extends string>(\n  values: Record<K, V>,\n  deps: Dependencies\n): Record<K, Animated.Value<V>> =>\n  useMemoOne(() => {\n    const result: Record<string, Animated.Value<V>> = {};\n    Object.keys(values).forEach((key) => {\n      result[key as K] = new Value(values[key as K]);\n    });\n    return result;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\nexport const useClocks = (\n  numberOfClocks: number,\n  deps: Dependencies\n): Animated.Clock[] =>\n  useMemoOne(\n    () => new Array(numberOfClocks).fill(0).map(() => new Clock()),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    deps\n  );\n\nexport const useDiff = (node: Animated.Node<number>, deps: Dependencies) => {\n  const [dDiff] = useValues<number>([0], deps);\n  useCode(() => set(dDiff, diff(node)), [dDiff, node]);\n  return dDiff;\n};\n"]}